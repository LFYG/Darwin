#!/bin/bash


####### Depends ###############################
### xpwn dmg2img wget
###############################################

rm -rf /tmp/ios
mkdir -p /tmp/ios

###############################################

msg_fun(){
clear
echo -e ""
echo -e "    $TITLE"
echo -e ""
echo -e "    $TEXT"
echo -e ""
read MSG

}

find_xpwn_fun(){
clear
echo -e ""
echo -e "    設置 xpwn 目錄路徑"
echo -e ""
echo -e "    將 xpwn 目錄拖放到此"
echo -e ""
read XPWN
[[ "$XPWN" ]]

cd "$XPWN"

XPWN_TOOL="./xpwntool"
VF="./vfdecrypt"
DMG="./dmg"
}

ipsw_upk_fun(){

clear
echo -e ""
echo -e "    選擇要解密的 IPSW"
echo -e ""
echo -e "    將 IPSW 拖放到此"
echo -e ""
read IPSW
[[ "$IPSW" ]]

echo "$IPSW" > /tmp/ios/ipswfile

PKGNANE=$(cat /tmp/ios/ipswfile | sed s/"\/"/" "/g | tr ' ' '\n' | awk 'END {print}')

if [ "$PKGNANE" == "" ]; then
    exit
fi

echo $PKGNANE > /tmp/ios/pkgname
PKGPATH=$(cat /tmp/ios/ipswfile | sed s/"$PKGNANE"//g)
cd $PKGPATH
mkdir -p $PKGNANE"_upk"
cd $PKGNANE"_upk"

unzip ../$PKGNANE

TITLE="ISPW"
TEXT="$PKGNANE Unpacked!"
msg_fun

}

###############################################
ios_key_fun(){

PKGNAME=$(cat /tmp/ios/romfile | sed 's/.ipsw_upk.*//g' | sed s/"\/"/" "/g | tr ' ' '\n' | awk 'END {print}')

echo $PKGNAME > /tmp/ios/pkgname

PTYPE=$(cat /tmp/ios/pkgname | awk -F'[_\t]' '{print $1}')
OVER=$(cat /tmp/ios/pkgname | awk -F'[_\t]' '{print $2}')
PVER=$(cat /tmp/ios/pkgname | awk -F'[_\t]' '{print $3}')

case "$OVER" in
"5.0"|"5.0.1") CODENAME="Telluride";;
"5.1"|"5.1.1") CODENAME="Hoodoo";;
"6.0"|"6.0.1") CODENAME="Sundance";;
"6.1"|"6.1.1"|"6.1.2") CODENAME="Brighton";;
"6.1.3") CODENAME="BrightonMaps";;
"7.0"|"7.0.2") CODENAME="Innsbruck";;
"7.0.3"|"7.0.4"|"7.0.6") CODENAME="InnsbruckTaos";;
"7.1") CODENAME="Sochi";;
"7.1.1") CODENAME="SUSochi";;
"7.1.2") CODENAME="Sochi";;
"8.0"|"8.0.1"|"8.0.2") CODENAME="Okemo";;
"8.1") CODENAME="OkemoTaos";;
"8.1.1"|"8.1.2") CODENAME="SUOkemoTaos";;
"8.1.3") CODENAME="SUOkemoTaosTwo";;
"8.2") CODENAME="OkemoZurs";;
"8.3") CODENAME="Stowe";;
"8.4") CODENAME="Copper";;
"8.4.1") CODENAME="Donner";;
"9.0"|"9.0.1"|"9.0.2") CODENAME="Monarch";;
"9.1") CODENAME="Boulder";;
"9.2") CODENAME="Castlerock";;
"9.2.1") CODENAME="Dillon";;
"9.3"|"9.3.1") CODENAME="Eagle";;
"9.3.2") CODENAME="Frisco";;
"9.3.3"|"9.3.4"|"9.3.5") CODENAME="Genoa";;
esac

wget https://www.theiphonewiki.com/wiki/"$CODENAME"_"$PVER"_"(""$PTYPE"")"
mv "$CODENAME"_"$PVER"_"(""$PTYPE"")" /tmp/ios/keyhtml

# RootFilesystem
rootfs=$(cat /tmp/ios/keyhtml | grep 'id="keypage-rootfs"' | sed 's/.*id="keypage-rootfs">//g' | sed 's/<.*//g')
rootfs_key=$(cat /tmp/ios/keyhtml | grep keypage-rootfs-key | sed 's/.*id="keypage-rootfs-key">//g' | sed 's/<.*//g')
echo "rootfs $rootfs $rootfs_key" > /tmp/ios/ios-key-list

# UpdateRamdisk
updateramdisk=$(cat /tmp/ios/keyhtml | grep 'id="keypage-updateramdisk"' | sed 's/.*id="keypage-updateramdisk">//g' | sed 's/<.*//g')
updateramdisk_key=$(cat /tmp/ios/keyhtml | grep keypage-updateramdisk-key | sed 's/.*id="keypage-updateramdisk-key">//g' | sed 's/<.*//g')
updateramdisk_iv=$(cat /tmp/ios/keyhtml | grep keypage-updateramdisk-iv | sed 's/.*id="keypage-updateramdisk-iv">//g' | sed 's/<.*//g')
echo "updateramdisk $updateramdisk $updateramdisk_key $updateramdisk_iv" >> /tmp/ios/ios-key-list

# RestoreRamdisk
restoreramdisk=$(cat /tmp/ios/keyhtml | grep 'id="keypage-restoreramdisk"' | sed 's/.*id="keypage-restoreramdisk">//g' | sed 's/<.*//g')
restoreramdisk_key=$(cat /tmp/ios/keyhtml | grep keypage-restoreramdisk-key | sed 's/.*id="keypage-restoreramdisk-key">//g' | sed 's/<.*//g')
restoreramdisk_iv=$(cat /tmp/ios/keyhtml | grep keypage-restoreramdisk-iv | sed 's/.*id="keypage-restoreramdisk-iv">//g' | sed 's/<.*//g')
echo "restoreramdisk $restoreramdisk $restoreramdisk_key $restoreramdisk_iv" >> /tmp/ios/ios-key-list

# AppleLogo
applelogo=$(cat /tmp/ios/keyhtml | grep 'id="keypage-applelogo"' | sed 's/.*id="keypage-applelogo">//g' | sed 's/<.*//g')
applelogo_key=$(cat /tmp/ios/keyhtml | grep keypage-applelogo-key | sed 's/.*id="keypage-applelogo-key">//g' | sed 's/<.*//g')
applelogo_iv=$(cat /tmp/ios/keyhtml | grep keypage-applelogo-iv | sed 's/.*id="keypage-applelogo-iv">//g' | sed 's/<.*//g')
echo "applelogo $applelogo $applelogo_key $applelogo_iv" >> /tmp/ios/ios-key-list

# BatteryCharging0
batterycharging0=$(cat /tmp/ios/keyhtml | grep 'id="keypage-batterycharging0"' | sed 's/.*id="keypage-batterycharging0">//g' | sed 's/<.*//g')
batterycharging0_key=$(cat /tmp/ios/keyhtml | grep keypage-batterycharging0-key | sed 's/.*id="keypage-batterycharging0-key">//g' | sed 's/<.*//g')
batterycharging0_iv=$(cat /tmp/ios/keyhtml | grep keypage-batterycharging0-iv | sed 's/.*id="keypage-batterycharging0-iv">//g' | sed 's/<.*//g')
echo "batterycharging0 $batterycharging0 $batterycharging0_key $batterycharging0_iv" >> /tmp/ios/ios-key-list

# BatteryCharging1
batterycharging1=$(cat /tmp/ios/keyhtml | grep 'id="keypage-batterycharging1"' | sed 's/.*id="keypage-batterycharging1">//g' | sed 's/<.*//g')
batterycharging1_key=$(cat /tmp/ios/keyhtml | grep keypage-batterycharging1-key | sed 's/.*id="keypage-batterycharging1-key">//g' | sed 's/<.*//g')
batterycharging1_iv=$(cat /tmp/ios/keyhtml | grep keypage-batterycharging1-iv | sed 's/.*id="keypage-batterycharging1-iv">//g' | sed 's/<.*//g')
echo "batterycharging1 $batterycharging1 $batterycharging1_key $batterycharging1_iv" >> /tmp/ios/ios-key-list

# BatteryFull
batteryfull=$(cat /tmp/ios/keyhtml | grep 'id="keypage-batteryfull"' | sed 's/.*id="keypage-batteryfull">//g' | sed 's/<.*//g')
batteryfull_key=$(cat /tmp/ios/keyhtml | grep keypage-batteryfull-key | sed 's/.*id="keypage-batteryfull-key">//g' | sed 's/<.*//g')
batteryfull_iv=$(cat /tmp/ios/keyhtml | grep keypage-batteryfull-iv | sed 's/.*id="keypage-batteryfull-iv">//g' | sed 's/<.*//g')
echo "batteryfull $batteryfull $batteryfull_key $batteryfull_iv" >> /tmp/ios/ios-key-list

# BatteryLow0
batterylow0=$(cat /tmp/ios/keyhtml | grep 'id="keypage-batterylow0"' | sed 's/.*id="keypage-batterylow0">//g' | sed 's/<.*//g')
batterylow0_key=$(cat /tmp/ios/keyhtml | grep keypage-batterylow0-key | sed 's/.*id="keypage-batterylow0-key">//g' | sed 's/<.*//g')
batterylow0_iv=$(cat /tmp/ios/keyhtml | grep keypage-batterylow0-iv | sed 's/.*id="keypage-batterylow0-iv">//g' | sed 's/<.*//g')
echo "batterylow0 $batterylow0 $batterylow0_key $batterylow0_iv" >> /tmp/ios/ios-key-list

# BatteryLow1
batterylow1=$(cat /tmp/ios/keyhtml | grep 'id="keypage-batterylow1"' | sed 's/.*id="keypage-batterylow1">//g' | sed 's/<.*//g')
batterylow1_key=$(cat /tmp/ios/keyhtml | grep keypage-batterylow1-key | sed 's/.*id="keypage-batterylow1-key">//g' | sed 's/<.*//g')
batterylow1_iv=$(cat /tmp/ios/keyhtml | grep keypage-batterylow1-iv | sed 's/.*id="keypage-batterylow1-iv">//g' | sed 's/<.*//g')
echo "batterylow1 $batterylow1 $batterylow1_key $batterylow1_iv" >> /tmp/ios/ios-key-list

# DeviceTree
devicetree=$(cat /tmp/ios/keyhtml | grep 'id="keypage-devicetree"' | sed 's/.*id="keypage-devicetree">//g' | sed 's/<.*//g')
devicetree_key=$(cat /tmp/ios/keyhtml | grep keypage-devicetree-key | sed 's/.*id="keypage-devicetree-key">//g' | sed 's/<.*//g')
devicetree_iv=$(cat /tmp/ios/keyhtml | grep keypage-devicetree-iv | sed 's/.*id="keypage-devicetree-iv">//g' | sed 's/<.*//g')
echo "devicetree $devicetree $devicetree_key $devicetree_iv" >> /tmp/ios/ios-key-list

# GlyphPlugin
glyphplugin=$(cat /tmp/ios/keyhtml | grep 'id="keypage-glyphplugin"' | sed 's/.*id="keypage-glyphplugin">//g' | sed 's/<.*//g')
glyphplugin_key=$(cat /tmp/ios/keyhtml | grep keypage-glyphplugin-key | sed 's/.*id="keypage-glyphplugin-key">//g' | sed 's/<.*//g')
glyphplugin_iv=$(cat /tmp/ios/keyhtml | grep keypage-glyphplugin-iv | sed 's/.*id="keypage-glyphplugin-iv">//g' | sed 's/<.*//g')
echo "glyphplugin $glyphplugin $glyphplugin_key $glyphplugin_iv" >> /tmp/ios/ios-key-list

# iBEC
ibec=$(cat /tmp/ios/keyhtml | grep 'id="keypage-ibec"' | sed 's/.*id="keypage-ibec">//g' | sed 's/<.*//g')
ibec_key=$(cat /tmp/ios/keyhtml | grep keypage-ibec-key | sed 's/.*id="keypage-ibec-key">//g' | sed 's/<.*//g')
ibec_iv=$(cat /tmp/ios/keyhtml | grep keypage-ibec-iv | sed 's/.*id="keypage-ibec-iv">//g' | sed 's/<.*//g')
echo "ibec $ibec $ibec_key $ibec_iv" >> /tmp/ios/ios-key-list

# iBoot
iboot=$(cat /tmp/ios/keyhtml | grep 'id="keypage-iboot"' | sed 's/.*id="keypage-iboot">//g' | sed 's/<.*//g')
iboot_key=$(cat /tmp/ios/keyhtml | grep keypage-iboot-key | sed 's/.*id="keypage-iboot-key">//g' | sed 's/<.*//g')
iboot_iv=$(cat /tmp/ios/keyhtml | grep keypage-iboot-iv | sed 's/.*id="keypage-iboot-iv">//g' | sed 's/<.*//g')
echo "iboot $iboot $iboot_key $iboot_iv" >> /tmp/ios/ios-key-list

# iBSS
ibss=$(cat /tmp/ios/keyhtml | grep 'id="keypage-ibss"' | sed 's/.*id="keypage-ibss">//g' | sed 's/<.*//g')
ibss_key=$(cat /tmp/ios/keyhtml | grep keypage-ibss-key | sed 's/.*id="keypage-ibss-key">//g' | sed 's/<.*//g')
ibss_iv=$(cat /tmp/ios/keyhtml | grep keypage-ibss-iv | sed 's/.*id="keypage-ibss-iv">//g' | sed 's/<.*//g')
echo "ibss $ibss $ibss_key $ibss_iv" >> /tmp/ios/ios-key-list

# Kernelcache
kernelcache=$(cat /tmp/ios/keyhtml | grep 'id="keypage-kernelcache"' | sed 's/.*id="keypage-kernelcache">//g' | sed 's/<.*//g')
kernelcache_key=$(cat /tmp/ios/keyhtml | grep keypage-kernelcache-key | sed 's/.*id="keypage-kernelcache-key">//g' | sed 's/<.*//g')
kernelcache_iv=$(cat /tmp/ios/keyhtml | grep keypage-kernelcache-iv | sed 's/.*id="keypage-kernelcache-iv">//g' | sed 's/<.*//g')
echo "kernelcache $kernelcache $kernelcache_key $kernelcache_iv" >> /tmp/ios/ios-key-list

# LLB
llb=$(cat /tmp/ios/keyhtml | grep 'id="keypage-llb"' | sed 's/.*id="keypage-llb">//g' | sed 's/<.*//g')
llb_key=$(cat /tmp/ios/keyhtml | grep keypage-llb-key | sed 's/.*id="keypage-llb-key">//g' | sed 's/<.*//g')
llb_iv=$(cat /tmp/ios/keyhtml | grep keypage-llb-iv | sed 's/.*id="keypage-llb-iv">//g' | sed 's/<.*//g')
echo "llb $llb $llb_key $llb_iv" >> /tmp/ios/ios-key-list

# RecoveryMode
recoverymode=$(cat /tmp/ios/keyhtml | grep 'id="keypage-recoverymode"' | sed 's/.*id="keypage-recoverymode">//g' | sed 's/<.*//g')
recoverymode_key=$(cat /tmp/ios/keyhtml | grep keypage-recoverymode-key | sed 's/.*id="keypage-recoverymode-key">//g' | sed 's/<.*//g')
recoverymode_iv=$(cat /tmp/ios/keyhtml | grep keypage-recoverymode-iv | sed 's/.*id="keypage-recoverymode-iv">//g' | sed 's/<.*//g')
echo "recoverymode $recoverymode $recoverymode_key $recoverymode_iv" >> /tmp/ios/ios-key-list


}

###############################################
decrypt_rootfs_fun(){
# SAVE=$(zenity --file-selection --title="選擇要保存路徑" --save --filename=rootfs.dmg)

clear
echo -e ""
echo -e "    選擇要保存的路徑"
echo -e ""
echo -e "    將保存的路徑拖放到此"
echo -e ""
read SAVE
[[ "$SAVE" ]]

if [ "$SAVE" == "" ]; then
    exit
fi

# vfdecrypt -k $ROM_KEY -i $ROM_PATCH -o /tmp/ios/rootfs_decrypted.dmg
$VF -k $ROM_KEY -i $ROM_PATCH -o /tmp/ios/rootfs_decrypted.dmg
$DMG extract /tmp/ios/rootfs_decrypted.dmg $SAVE"/"$ROM_NAME

# rm -rf /tmp/ios/rootfs_decrypted.dmg

TITLE="rootfs"
TEXT="$ROM_TYPE decrypted!"
msg_fun

main_fun
}

###############################################
decrypt_updateramdisk_fun(){
# SAVE=$(zenity --file-selection --title="選擇要保存路徑" --save --filename=update_ramdisk.dmg)

clear
echo -e ""
echo -e "    選擇要保存的路徑"
echo -e ""
echo -e "    將保存的路徑拖放到此"
echo -e ""
read SAVE
[[ "$SAVE" ]]

if [ "$SAVE" == "" ]; then
    exit
fi

$XPWN_TOOL $ROM_PATCH $SAVE"/"$ROM_NAME -iv $ROM_IV -k $ROM_KEY

TITLE="updateramdisk"
TEXT="$ROM_TYPE decrypted!"
msg_fun

main_fun
}

###############################################
decrypt_restoreramdisk_fun(){
# SAVE=$(zenity --file-selection --title="選擇要保存路徑" --save --filename=restore_ramdisk.dmg)

clear
echo -e ""
echo -e "    選擇要保存的路徑"
echo -e ""
echo -e "    將保存的路徑拖放到此"
echo -e ""
read SAVE
[[ "$SAVE" ]]

if [ "$SAVE" == "" ]; then
    exit
fi

$XPWN_TOOL $ROM_PATCH $SAVE"/"$ROM_NAME -iv $ROM_IV -k $ROM_KEY

TITLE="restoreramdisk"
TEXT="$ROM_TYPE decrypted!"
msg_fun

main_fun
}

###############################################
decrypt_rom_fun(){

clear
echo -e ""
echo -e "    選擇要保存的路徑"
echo -e ""
echo -e "    將保存的路徑拖放到此"
echo -e ""
read SAVE
[[ "$SAVE" ]]

if [ "$SAVE" == "" ]; then
    exit
fi

echo $XPWN_TOOL
echo $ROM_PATCH
echo $SAVE"/"$ROM_NAME

$XPWN_TOOL $ROM_PATCH $SAVE"/"$ROM_NAME -iv $ROM_IV -k $ROM_KEY

TITLE="ROM"
TEXT="$ROM_TYPE decrypted!"
msg_fun

main_fun
}

###############################################
decrypt_fun(){

clear
echo -e ""
echo -e "    選擇要解密的檔案"
echo -e ""
echo -e "    將已加密文件拖放到此"
echo -e ""
read ROM
[[ "$ROM" ]]

echo "$ROM" > /tmp/ios/romfile

ROM_PATCH=$(cat /tmp/ios/romfile)

if [ "$ROM_PATCH" == "" ]; then
    exit
fi

if [ ! -f "/tmp/ios/ios-key-list" ]; then
    ios_key_fun
fi

ROM_NAME=$(cat /tmp/ios/romfile | sed s/"\/"/" "/g | tr ' ' '\n' | awk 'END {print}')
ROM_TYPE=$(cat /tmp/ios/ios-key-list | grep "$ROM_NAME" | awk '{print $1}')
ROM_KEY=$(cat /tmp/ios/ios-key-list | grep "$ROM_NAME" | awk '{print $3}')
ROM_IV=$(cat /tmp/ios/ios-key-list | grep "$ROM_NAME" | awk '{print $4}')


if [ "$ROM_TYPE" == "rootfs" ]; then
    decrypt_rootfs_fun
elif [ "$ROM_TYPE" == "updateramdisk" ]; then
    decrypt_updateramdisk_fun
elif [ "$ROM_TYPE" == "restoreramdisk" ]; then
    decrypt_restoreramdisk_fun
else
    decrypt_rom_fun
fi

}

###############################################

main_fun(){

clear
echo -e ""
echo -e "    1) 解壓縮ispw"
echo -e ""
echo -e "    2) 解密rom檔案"
echo -e ""
echo -e "    3) EXIT"
echo -e ""
read OPT
[[ "$OPT" ]]

if [ "$OPT" == "1" ]; then
    ipsw_upk_fun
elif [ "$OPT" == "2" ]; then
    decrypt_fun
else
    exit
fi

exit

}

find_xpwn_fun
main_fun
